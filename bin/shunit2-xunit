#! /bin/bash
#	shunit2-xunit [-OPTIONS] [DIRs]
#		-a ACTDIR     run all suites that are children of ACTDIR
#		-d            debug
#		-h            print help message
#		-o XMLFILE    put xml results in XMLFILE
#		-v            verbose
# run shunit2 tests under all the given DIRs,
# and report results in xunit xml format.
# for reporting purposes, each DIR is considered a "test suite".
# all -test files under it are considered "test cases"
#

testcases()
{
	declare d="$1"
	find $d -type f -name "*_test.sh" -o -name "shunit2_test_*.sh"
}

runtest()
{
	declare tf="$1" outf="$2"
	declare tmpf="$LOGDIR/s2-out.tmp"
	declare xstat

	$DFLAG && echo "+ $t"

	((SECONDS=0))
	d=$(dirname $t)
	t=$(basename $t)
	(cd $d && ./$t) > "$tmpf" 2>&1
	xstat=$?
	cat "$tmpf"

	if $OFLAG; then
		{
		printf '<testcase classname="%s" name="%s" time="%d">\n' \
			"shunit2" "$t" "$SECONDS"
		if [ $xstat -ne 0 ]; then
			printf '</failure>\n'
			cat "$tmpf"
			printf '</failure>\n'
		fi
		printf '</testcase>\n'
		} >> $outf
	fi

	return $xstat
}

runsuite()
{
	declare name="$1"
	declare cases=$(testcases "$name" | sort)
	declare tests=0 errors=0 failures=0
	declare outf="$LOGDIR/xml.tmp"
	declare xstat

	if [ -z "$cases" ]; then
		# a directory with no tests will be skipped, not counted
		$DFLAG && echo "===== no shunit2 tests found under $name, skipping"
		return 0
	fi

	((NSUITES++))

	$VFLAG && echo "===== running suite $name"
	mkdir -p $LOGDIR

	for t in $cases; do
		if ! runtest "$t" "$outf"; then
			FAILED=1
			((failures++))
		fi
		((tests++))
	done

	if $OFLAG; then
	{
	printf '<testsuite name="%s" tests="%d" errors="%d" failures="%d">\n' \
		"$name" "$tests" "$errors" "$failures"
	cat "$outf"
	printf '</testsuite>\n'
	} >> $XMLFILE
	fi

	/bin/rm -rf $LOGDIR

	[ $failures -eq 0 ]
}

usage()
{
	echo 'usage: shunit2-xunit [-OPTIONS] [DIRs]'
	echo '	-a ACTDIR    run all suites children of ACTDIR'
	echo '	-d           debug'
	echo '	-h           print help message'
	echo '	-o XMLFILE   output xml to XMLFILE'
	echo '	-v           verbose'
	echo '	DIRs         directories containing shunit2 tests'
}

get_suites()
{
	declare d="$1"
	find "$d"/* -maxdepth 0 -type d | sed -e 's,^\./,,'
}

prog_error()
{
	echo "$PROGNAME: $*" 1>&2
}

main()
{
	while getopts ':a:dho:p:v' flag; do
		case "$flag" in
		a)
			AFLAG=true
			ACTDIR="$OPTARG"
			;;
		d)
			DFLAG=true
			;;
		h)
			usage
			exit 0
			;;
		v)
			VFLAG=true
			;;
		o)
			XMLFILE="$OPTARG"
			OFLAG=true
			;;
		*)
			prog_error "unknown flag -$flag"
			exit 1
			;;
		esac
	done
	shift $((OPTIND-1))
	if [ $# -eq 0 ]; then
		AFLAG=true
		ACTDIR=.
	fi
	if $AFLAG; then
		set -- $(get_suites $ACTDIR) "$@"
	fi

	if $OFLAG; then
		{
		echo '<?xml version="1.0" encoding="UTF-8"?>'
		} >> $XMLFILE
	fi

	for d in "$@"; do
		runsuite $d || ((SUITES_FAILED++))
	done
}

cleanup()
{
	/bin/rm -rf $LOGDIR
}

# ----- start of mainline code
FAILED=0
PROGNAME=${0##*/}
PROGDIR=$(cd $(dirname $0) && /bin/pwd -P)
XMLFILE=
OFLAG=false
AFLAG=false
ACTDIR=
DFLAG=false
VFLAG=false
LOGDIR=/tmp/shunit2-xunit-$$
NSUITES=0
SUITES_FAILED=0
trap cleanup exit

main "$@"

printf "===== Ran $NSUITES suites, $SUITES_FAILED failed\n"

[ $SUITES_FAILED -eq 0 ]
